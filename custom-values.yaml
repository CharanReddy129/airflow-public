executor: "CeleryExecutor"
workers:
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 800m
      memory: 1Gi
  
  persistence:
    enabled: true
    storageClassName: "standard"
    size: 2Gi

  logGroomerSidecar:
    enabled: false

scheduler:
  replicas: 1
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 700m
      memory: 1Gi
  
  startupProbe:
    timeoutSeconds: 90
    periodSeconds: 20
    failureThreshold: 12

  livenessProbe:
    timeoutSeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  
  logGroomerSidecar:
    enabled: false

apiServer:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 512Mi

  startupProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 20
    periodSeconds: 10
  
  livenessProbe:
    initialDelaySeconds: 90
    timeoutSeconds: 10
    failureThreshold: 5
    periodSeconds: 30
  
  readinessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 10
    failureThreshold: 5
    periodSeconds: 10

webserver:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 512Mi
    
  startupProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
    failureThreshold: 10
    periodSeconds: 10
  
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 10
    failureThreshold: 5
    periodSeconds: 30
  
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 10
    failureThreshold: 5
    periodSeconds: 10

triggerer:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi 
  
  persistence:
    enabled: true
    storageClassName: "standard"
    size: 1Gi

  logGroomerSidecar:
    enabled: false

  livenessProbe:
    initialDelaySeconds: 90
    timeoutSeconds: 60
    failureThreshold: 5
    periodSeconds: 30
  

redis:
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  persistence:
    enabled: true
    storageClassName: "standard"
    size: 1Gi

postgresql:
  enabled: true
  primary:
    persistence:
      enabled: true
      storageClassName: "standard"
      size: 2Gi
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 400m
        memory: 512Mi

flower:
  enabled: false

statsd:
  enabled: false

pgbouncer: 
  enabled: false

cleanup:
  enabled: false

config:
  core:
    # executor: CeleryExecutor
    parallelism: 8         
    max_active_tasks_per_dag: 4  
    max_active_runs_per_dag: 1
  
    load_examples: 'False'
    
    check_slas: 'False'
    store_dag_code: 'True'
    store_serialized_dags: 'True'

  celery:
    worker_concurrency: 2
  
  scheduler:
    
    scheduler_heartbeat_sec: 10
    min_file_process_interval: 30
    dag_dir_list_interval: 300
    
    parsing_processes: 1
    max_dagruns_to_create_per_loop: 5
    max_dagruns_per_loop_to_schedule: 10

  webserver:
    workers: 1
    worker_refresh_batch_size: 1
    reload_on_plugin_change: 'False'
    update_fab_perms: 'False'

  api: 
    # enable: "False"
    enable_experimental_api: 'False'

dags:
  persistence:
    enabled: false

  # for public repo

  # gitSync:
  #   enabled: true
  #   repo: "https://github.com/CharanReddy129/airflow-public.git"
  #   branch: "main"
  #   subPath: "airflow-dag"
  #   wait: 60
  #   depth: 1

  # for private repo
  gitSync:
    enabled: true
    repo: "git@github.com:CharanReddy129/airflow-private.git"
    branch: "main"
    subPath: "airflow-dag"
    wait: 60
    depth: 1
    sshKeySecret: "airflow-gitsync-ssh"
    # credentialsSecret: "airflow-gitsync-secret"
    # KnownHosts: true
    # sshKnownHostsConfigMapName: git-known-hosts

extraSecrets:
  airflow-gitsync-ssh:
    data: '<base64-encoded-private-key>' 

  # For creating the gitsync secret 

  # kubectl create secret generic airflow-gitsync-secret \
  #   --from-literal=GITSYNC_USERNAME="<your-github-username>" \
  #   --from-literal=GITSYNC_PASSWORD="<your-github-pat>" \
  #   -n airflow

  # with ssh key secret
  # kubectl create secret generic airflow-gitsync-ssh --from-file=ssh=<absolute-path-to-private-key> -n airflow

  # adding configMap for known hosts
  # kubectl create configmap git-known-hosts --from-file=known_hosts=<absolute-path-to-known-hosts-file> -n airflow


images:
  airflow:
    repository: charanreddy12/custom-airflow
    tag: v1
    pullPolicy: IfNotPresent

# airflow:
  # extraPipPackages:
  #   - "torch==2.8.0"
  #   - "pymongo==4.14.1"
  #   - "schedule==1.2.2"
  #   - "python-terraform==0.10.1"